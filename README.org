
* Serializable-Object

This library provides a simple metaclass and API for serializing CLOS objects in a FASL file.

+ The implementation is focused on a simplicity and conformance rather than speed.
+ It carefully combies the behavior of =make-load-form= and the file compiler specified in CLHS.
+ Should be thread-safe.
+ TODO: zip-compress the fasl file, similar to the numpy npz format.

** Usage

#+begin_src lisp
(ql:quickload :serializable-object)
(in-package :serializable-object)


(defclass my (serializable-object)
  ((value :initarg :value :initform nil))
  (:metaclass serializable-class))

(defvar *my-instance* (make-instance 'my :verbose t :value 5))

(save *my-instance* :verbose t :pathname "/tmp/tmp")
;; => Saving object #<MY {1010174E23}> to /tmp/tmp.fasl 
;; => ; compiling file "/tmp/tmp5GEXGEG5.tmp" (written 07 MAR 2019 03:55:28 PM):
;; => ; compiling (MAGIC-FORM)
;; => 
;; => ; wrote /tmp/tmp.fasl
;; => ; compilation finished in 0:00:00.002
;; -> #P"/tmp/tmp.fasl"
;; -> NIL
;; -> NIL

(defvar *another-instance* (make-instance 'my :verbose t :pathname "/tmp/tmp"))
;; => ; loading #P"/tmp/tmp.fasl"
;; -> *ANOTHER-INSTANCE*

(print (slot-value *another-instance* 'value))
;; => 5

#+end_src

** Dependencies
This library is at least tested on implementation listed below:

+ SBCL 1.4.12 on X86-64 Linux 4.4.0-142-generic (author's environment)

Also, it depends on the following libraries:

+ alexandria by *Nikodemus Siivola <nikodemus@sb-studio.net>, and others.* :
    Alexandria is a collection of portable public domain utilities.
+ closer-mop
+ bordeaux-threads

** Author, License, Copyright

Licensed under LGPL v3.

Copyright (c) 2019 Masataro Asai (guicho2.71828@gmail.com)
Copyright (c) 2019 IBM Corporation
