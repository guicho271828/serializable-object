
* Serializable-Object

This library provides a simple metaclass and API for serializing CLOS objects in a FASL file.

+ It exposes =serializable-class=, =serializable-object= and =save= generic function.
  An instance of =serializable-object= has a slot =pathname=.
+ The implementation is focused on a simplicity and conformance rather than speed.
+ It carefully combies the behavior of =make-load-form= and the file compiler specified in CLHS.
+ Should be thread-safe.
+ TODO: zip-compress the fasl file, similar to the numpy npz format.

** Usage

#+begin_src lisp
(ql:quickload :serializable-object)
(in-package :serializable-object)


(defclass my (serializable-object)
  ((value :initarg :value :initform nil))
  (:metaclass serializable-class))

(defvar *my-instance* (make-instance 'my :verbose t :value 5))

(save *my-instance* :verbose t :pathname "/tmp/tmp")
;; => Saving object #<MY {1010174E23}> to /tmp/tmp.fasl 
;; => ; compiling file "/tmp/tmp5GEXGEG5.tmp" (written 07 MAR 2019 03:55:28 PM):
;; => ; compiling (MAGIC-FORM)
;; => 
;; => ; wrote /tmp/tmp.fasl
;; => ; compilation finished in 0:00:00.002
;; -> #P"/tmp/tmp.fasl"
;; -> NIL
;; -> NIL

(defvar *another-instance* (make-instance 'my :verbose t :pathname "/tmp/tmp"))
;; => ; loading #P"/tmp/tmp.fasl"
;; -> *ANOTHER-INSTANCE*

(print (slot-value *another-instance* 'value))
;; => 5

#+end_src

** API

: (make-instance (class serializable-class) &key pathname (load nil load-specified-p) verbose &allow-other-keys)

The library overrides the default method of =make-instance=.

+ When =LOAD= is non-nil, it checks =PATHNAME= and the specified path, then load the object.
+ When =LOAD= is specified to =nil=, it instantiates the object normally without loading from the =PATHNAME=.
  The =PATHNAME= slot is also set.
+ When =LOAD= is not specified, it loads from the file if it exists; Otherwise it instantiates the object normally.

: (save instance &key pathname store verbose &allow-other-keys)

Save an instance to a FASL file using the value of PATHNAME slot in the instance.
When PATHNAME is given as an argument,

+ the object is stored in the file specified by PATHNAME,
+ the slot value is _temporarily_ set to this value while saving the instance,
+ and the value of PATHNAME is used to save the PATHNAME slot in the saved object.

If STORE is non-nil when PATHNAME is given, the PATHNAME slot in the runtime object remains overwritten.
Otherwise the PATHNAME slot value is restored to the original value after returning from this function.

When an error occurs during the call to SAVE (e.g. nonexisting directory or permission error),
the path is reverted to the original value.

** Dependencies
This library is at least tested on implementation listed below:

+ SBCL 1.4.12 on X86-64 Linux 4.4.0-142-generic (author's environment)

Also, it depends on the following libraries:

+ alexandria by *Nikodemus Siivola <nikodemus@sb-studio.net>, and others.* :
    Alexandria is a collection of portable public domain utilities.
+ closer-mop
+ bordeaux-threads

** Author, License, Copyright

Licensed under LGPL v3.

Copyright (c) 2019 Masataro Asai (guicho2.71828@gmail.com)
Copyright (c) 2019 IBM Corporation
